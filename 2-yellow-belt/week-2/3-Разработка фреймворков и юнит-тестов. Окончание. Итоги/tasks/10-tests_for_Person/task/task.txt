Задача
В первом курсе «Белый пояс по С++» у нас была задача «Имена и фамилии — 1». 
В ней надо было разработать класс Person, поддерживающий историю изменений человеком своих фамилии и имени. 
В данной задаче вам надо разработать юнит-тесты на реализацию класса Person. 
При разработке тестов учитывайте ограничения, которые накладывает на класс Person условие задачи «Имена и фамилии — 1».

Начать работу вы можете с шаблона, который содержит наш фреймворк юнит-тестов и заготовку класса в файле test_person.cpp.


Считайте, что в каждый год может произойти не более одного изменения фамилии и не более одного изменения имени. 
При этом с течением времени могут открываться всё новые факты из прошлого человека, поэтому года́ в последовательных вызовах методов ChangeLastName и ChangeFirstName не обязаны возрастать.

Гарантируется, что все имена и фамилии непусты.

Строка, возвращаемая методом GetFullName, должна содержать разделённые одним пробелом имя и фамилию человека по состоянию на конец данного года.
- Если к данному году не случилось ни одного изменения фамилии и имени, верните строку "Incognito".
- Если к данному году случилось изменение фамилии, но не было ни одного изменения имени, верните "last_name with unknown first name".
- Если к данному году случилось изменение имени, но не было ни одного изменения фамилии, верните "first_name with unknown last name".

Примечание
Перед отправкой вашего файла убедитесь, что он не содержит класса Person. 
В противном случае вы получите ошибку компиляции. 
Наша тестирующая система умеет игнорировать функции в файлах 
(поэтому, например, в задаче "Тесты для функции IsPalindrom" необязательно удалять функцию IsPalindrom), но не умеет это делать для классов.